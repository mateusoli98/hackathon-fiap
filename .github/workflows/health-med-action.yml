name: HealthMed

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  dotnet_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - name: Cache .NET packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/packages.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.300
  
      - name: Restore dependencies
        run: dotnet restore HealthMed
  
      - name: Build
        run: dotnet build HealthMed --no-restore
        
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
     
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
         dotnet-version: 8.0.300
         
      - name: Restore Dependencies
        run: cd HealthMed && dotnet restore
        
      - name: Build
        run: cd HealthMed && dotnet build --no-restore
  
      - name: Docker Build - HealthMedAPI
        working-directory: ./HealthMed
        run: docker build -t healthmedapiv1 -f "1 - APIs/HealthMedApi/Dockerfile" .
      - name: Docker Build - ScheduleAPI
        working-directory: ./HealthMed
        run: docker build -t scheduleapiv1 -f "1 - APIs/ScheduleApi/Dockerfile" .
  
  kubernetes_validation:
    runs-on: ubuntu-latest
    needs: [docker_build, dotnet_build]
    steps:
      - uses: actions/checkout@v4

      - name: Download Docker Images
        uses: actions/download-artifact@v2
        with:
          name: docker_images
          path: ./HealthMed/docker_images
      
      - name: Load Docker Images
        run: |
          docker load -i ./HealthMed/docker_images/healthmedapiv1.tar
          docker load -i ./HealthMed/docker_images/scheduleapiv1.tar

      - name: List Docker images
        run: docker images 

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kubernetes Cluster
        run: kind create cluster --name healthmed-cluster --image kindest/node:v1.24.0

      - name: Apply Kubernetes Manifests
        working-directory: ./Pipelines/
        run: kubectl apply -R -f .

      - name: Validate Application Health
        run: kubectl get all
